Installation / readme for SCCPDSD

There are 5 component for this package

ID       Is an Assembler macro required to assemble each of the
         assembler routines. Put it into a library included in your
         SYSLIB concatenation for the assemblies.

STSS383  Is an assembler subroutine required for SCCPDSD. Assemble it
         into an object or call library so that it can be link edited
         into SCCPDSD.  Note that this subroutine could be CALLed by any
         program wishing to get an in-core table of the directory
         entries from a PDS.

SCCWC001 Is an assembler subroutine required for SCCPDSD. Assemble it
         into an object or call library so that it can be link edited
         into SCCPDSD.  Note that this subroutine could be CALLed by any
         program wishing to get an answer to 'does this generic entry
         match this static entry?'

SCCPDSD  Is an assembler routine which runs as a Rexx function to
         populate a stem variable (or 'stack') with the directory
         entries

HELP     Is the documentation on how to access directory entries in Rexx

Making SCCPDSD available to your rexx program can be as simple as
link editing it to a load library that is within the JOBLIB/STEPLIB
concatenation when the rexx program runs. Myself, I have built a Rexx
function package under the name IRXFLOC which contains all the
assembler written rexx functions for the platform.

Below is a Rexx prototype to read all the records of every member from
DDname SYSUT1 where the member name begins with SCC. Note that
DDname SYSUT1 would be pre-allocated. SCCPDSR is another function
packaged separately.


Call SCCPDSD 'SYSUT1',   'SCC*',  'D.'
do d# = 1 to d.0
     call SCCPDSR 'SYSUT1',  left(d.d#,12),  'R.'
     do r# = 1 to r.0
          parse var r.r# word1 etc .
     end
     drop R.
end
